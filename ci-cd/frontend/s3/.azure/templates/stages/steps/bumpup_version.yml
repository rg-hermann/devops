parameters:
  - name: sourceDir
    type: string
    default: '$(Build.SourcesDirectory)'

steps:
  - script: |
      set -euo pipefail      
      hour=$(echo "$(date +'%H')" | sed 's/^0*//')
      if [[ "$hour" == "" ]]; then
        hour=0
      fi
      buildId="$(Build.BuildNumber)"
      pipeNumber=$(echo "${buildId##*.}" | sed 's/^0*//')
      sumNumber=$((${hour}+${pipeNumber##*.}))
      echo "sum=${sumNumber}"
      
      if [ $((sumNumber)) -lt 100 ]; then      
        sumNumber="0${sumNumber}"
      elif [ $((sumNumber)) -lt 10 ]; then
        sumNumber="00${sumNumber}"
      fi
      
      BUILD_NUMBER="$(($((${buildId%.*}${sumNumber}))-240060718))"
      
      if [ $((BUILD_NUMBER)) -gt 50000000 ]; then
        echo "Build number is greater than 50000000"
        exit 1
      fi

      echo "buildNumber=${BUILD_NUMBER}"
      echo "##vso[task.setvariable variable=BUILD_NUMBER]$BUILD_NUMBER"
    displayName: 'Generating Build number'
    workingDirectory: '${{ parameters.sourceDir }}'

  - script: |
      set -euo pipefail      
      BUILD_NAME=$(cat pubspec.yaml | grep -oE "^version:\s(([0-9\.])?)+" | cut -d" " -f2)
      echo "${BUILD_NAME}" | grep -E "^[0-9]+\.[0-9]+\.[0-9]+$"
      echo "##vso[task.setvariable variable=BUILD_NAME]$BUILD_NAME"
    displayName: 'Generating Build name'
    workingDirectory: '${{ parameters.sourceDir }}'
